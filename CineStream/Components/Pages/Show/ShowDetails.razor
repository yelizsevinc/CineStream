@page "/shows/{ShowId}"
@using Microsoft.EntityFrameworkCore
@using CineStream.Data

@inject IDbContextFactory<CineStreamContext> DbFactory

<PageTitle>Show</PageTitle>

@if ((appShow != null) && (appShow.Title != null) && (appShow.Details != null))
{
    <h1><i class="bi bi-camera-reels-fill" aria-hidden="true"></i> @appShow.Title</h1>

    <div class="clr-row">
    <div class="clr-col-12">
        <Card>
            <CardHeader>
                <i class="bi bi-info-circle-fill" aria-hidden="true"></i> Details
            </CardHeader>
            <CardBody>
                <CardBlock>
                    <CardText>
                        @appShow.Details
                    </CardText>
                </CardBlock>
            </CardBody>
        </Card>
    </div>
    <div class="clr-col-lg-6 clr-col-12">
        <Card>
            <CardHeader>
                <NavLink href=@($"platforms")><i class="bi bi-tv-fill" aria-hidden="true"></i> Platforms</NavLink>
            </CardHeader>
            <CardBody>
                <CardBlock>
                    <CardText>
                        @if (appShowPlatforms != null)
                            {
                                @foreach (var appShowPlatform in appShowPlatforms)
                                {
                                    <ul>
                                        <li>@appShowPlatform.Name</li>
                                    </ul>
                                }
                            }
                        </CardText>
                    </CardBlock>
                </CardBody>
            </Card>
        </div>

        <div class="clr-col-lg-6 clr-col-12">
            <Card>
                <CardHeader>
                    <NavLink href=@($"users")><i class="bi bi-people-fill" aria-hidden="true"></i> Users</NavLink>
                </CardHeader>
                <CardBody>
                    <CardBlock>
                        <CardText>
                            @if (appShowUsers != null)
                            {
                                @foreach (var appShowUser in appShowUsers)
                                {
                                    <ul>
                                        <li>@appShowUser.Username</li>
                                    </ul>
                                }
                            }
                        </CardText>
                    </CardBlock>
                </CardBody>
            </Card>
        </div>
    </div>
}

@code
{
    [Parameter] public string? ShowId { get; set; }
    private Show? appShow { get; set; }
    private ICollection<Platform> appShowPlatforms = new List<Platform>();
    private ICollection<User> appShowUsers = new List<User>();
    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        using var context = DbFactory.CreateDbContext();

        appShow = await context.Shows!.FirstOrDefaultAsync(c => c.ShowId.ToString() == ShowId);
        if (appShow != null)
        {
            var showPlatforms = await context.PlatformShows!.Where(c => c.ShowId == appShow.ShowId).ToListAsync();

            foreach (var showPlatform in showPlatforms)
            {
                var platform = await context.Platforms!.FirstOrDefaultAsync(c => c.PlatformId == showPlatform.PlatformId);
                if (platform != null) appShowPlatforms.Add(platform);

            }

            var showUsers = await context.UserShows!.Where(c => c.ShowId == appShow.ShowId).ToListAsync();

            foreach (var showUser in showUsers)
            {
                var user = await context.Users!.FirstOrDefaultAsync(c => c.UserId == showUser.UserId);
                if (user != null) appShowUsers.Add(user);

            }

        }

    }
}