@page "/shows/{ShowId}"
@using Microsoft.EntityFrameworkCore
@using CineStream.Data

@inject IDbContextFactory<CineStreamContext> DbFactory

<PageTitle>Show</PageTitle>

@if (show != null && show.Title != null)
{
    <h1><i class="bi bi-camera-reels-fill" aria-hidden="true"></i> @show.Title</h1>

    <div class="clr-row">
    <div class="clr-col-12">
        <Card>
            <CardHeader>
                <i class="bi bi-info-circle-fill" aria-hidden="true"></i> Details
            </CardHeader>
            <CardBody>
                <CardBlock>
                    <CardText>
                        @if (show.Details != null)
                            {
                                @show.Details
                            }
                        </CardText>
                    </CardBlock>
                </CardBody>
            </Card>
        </div>
        <div class="clr-col-lg-6 clr-col-12">
            <Card>
                <CardHeader>
                    <i class="bi bi-tv-fill" aria-hidden="true"></i> Platforms
                </CardHeader>
                <CardBody>
                    <CardBlock>
                        <CardText>
                            @if (showPlatforms != null)
                            {
                                <ul>
                                    @foreach (var platform in showPlatforms)
                                    {
                                        <li>@platform.Name</li>
                                    }
                                </ul>
                            }
                        </CardText>
                    </CardBlock>
                </CardBody>
                <CardFooter>
                    <NavLink href=@($"shows/{ShowId}/add-platform")>
                        <Button Variant="Primary">
                            <i class="bi bi-plus-circle-fill" aria-hidden="true"></i> Add Platform
                        </Button>
                    </NavLink>
                </CardFooter>
            </Card>
        </div>

        <div class="clr-col-lg-6 clr-col-12">
            <Card>
                <CardHeader>
                    <i class="bi bi-people-fill" aria-hidden="true"></i> Users
                </CardHeader>
                <CardBody>
                    <CardBlock>
                        <CardText>
                            @if (showUsers != null)
                            {
                                <ul>
                                    @foreach (var user in showUsers)
                                    {
                                        <li>@user.Username</li>
                                    }
                                </ul>
                            }
                        </CardText>
                    </CardBlock>
                </CardBody>
                <CardFooter>
                    <NavLink href=@($"shows/{ShowId}/add-user")>
                        <Button Variant="Primary">
                            <i class="bi bi-plus-circle-fill" aria-hidden="true"></i> Add User
                        </Button>
                    </NavLink>
                </CardFooter>
            </Card>
        </div>
    </div>
}

@code
{
    [Parameter] public string? ShowId { get; set; }
    private Show? show { get; set; }
    private ICollection<Platform> showPlatforms = new List<Platform>();
    private ICollection<User> showUsers = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using var context = await DbFactory.CreateDbContextAsync();
            await LoadShowDetailsAsync(context);
            await LoadShowPlatformsAsync(context);
            await LoadShowUsersAsync(context);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading show data: {ex.Message}");
        }
    }

    private async Task LoadShowDetailsAsync(CineStreamContext context)
    {
        show = await context.Shows!.FirstOrDefaultAsync(c => c.ShowId.ToString() == ShowId);
    }

    private async Task LoadShowPlatformsAsync(CineStreamContext context)
    {
        if (show == null) return;

        var showPlatformsList = await context.PlatformShows!
        .Where(c => c.ShowId == show.ShowId)
        .ToListAsync();

        foreach (var showPlatform in showPlatformsList)
        {
            var platform = await context.Platforms!.FirstOrDefaultAsync(c => c.PlatformId == showPlatform.PlatformId);
            if (platform != null) showPlatforms.Add(platform);
        }
    }

    private async Task LoadShowUsersAsync(CineStreamContext context)
    {
        if (show == null) return;

        var showUsersList = await context.UserShows!
        .Where(c => c.ShowId == show.ShowId)
        .ToListAsync();

        foreach (var showUser in showUsersList)
        {
            var user = await context.Users!.FirstOrDefaultAsync(c => c.UserId == showUser.UserId);
            if (user != null) showUsers.Add(user);
        }
    }
}