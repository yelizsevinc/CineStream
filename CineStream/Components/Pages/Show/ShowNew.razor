@page "/shows/new"
@using Microsoft.EntityFrameworkCore
@using CineStream.Data

@inject IDbContextFactory<CineStreamContext> DbFactory
@inject NavigationManager NavManager

<PageTitle>New Show</PageTitle>

<h1><i class="bi bi-plus-circle-fill" aria-hidden="true"></i> New Show</h1>

<div class="clr-row">
    <div class="clr-col-lg-6 clr-col-12">
        <Card>
            <CardBody>
                <CardBlock>
                    <Form Model="newShow" OnValidSubmit="HandleValidSubmit" Layout="FormLayout.Vertical">
                        <DataAnnotationsValidator />

                        <Text @bind-Value="newShow.Title" Label="Title" HelpText="Title"
                            ValidationFor="() => newShow.Title" />
                        <Textarea @bind-Value="newShow.Details" Label="Details" HelpText="Show Details"
                            ValidationFor="() => newShow.Details" />
                        <Datepicker @bind-Value="newShow.ReleaseDate" Label="Release Date"
                            HelpText="@($"The selected date is {newShow.ReleaseDate?.ToShortDateString()}")">
                        </Datepicker>

                        <Button class="mt-3" Variant="Success" type="submit">Submit</Button>
                    </Form>
                </CardBlock>
            </CardBody>
        </Card>
    </div>
</div>

@code {
    private Show newShow = new Show();

    private async Task HandleValidSubmit()
    {
        try
        {
            using var context = await DbFactory.CreateDbContextAsync();
            newShow.CreatedAt = DateTime.Now;
            context.Shows?.Add(newShow);
            await context.SaveChangesAsync();
            NavManager.NavigateTo("/shows");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error creating new show: {ex.Message}");
        }
    }
}