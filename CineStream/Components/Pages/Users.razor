@page "/users"
@using Microsoft.EntityFrameworkCore
@using CineStream.Data

@inject IDbContextFactory<CineStreamContext> DbFactory

<PageTitle>Users</PageTitle>

<h1><i class="bi bi-people-fill" aria-hidden="true"></i> Users</h1>

<Tabs>
    <Tab>
        <Header>Users</Header>
        <ChildContent>
            <NavLink href="/users/new">
                <Button Variant="Primary">
                    <i class="bi bi-plus-circle-fill" aria-hidden="true"></i> New User
                </Button>
            </NavLink>
            @if (AppUsers != null)
            {
                <Datagrid Items="AppUsers">
                    <DatagridColumn Title="UserId" TRowData="User" Field="c => c.UserId" CanSort="true" CanFilter="true"
                        FilterImmediately="true" />
                    <DatagridColumn Title="Username" TRowData="User" Field="c => c.Username" CanSort="true" CanFilter="true"
                        FilterImmediately="true" />
                    <DatagridColumn Title="Email" TRowData="User" Field="c => c.Email" CanSort="true" CanFilter="true"
                        FilterImmediately="true" />
                    <DatagridColumn Title="Shows" TRowData="User">
                        <a href="@($"/users/{@context?.UserId}/shows")" class="btn btn-primary"><i
                                class="bi bi-camera-reels-fill" aria-hidden="true"></i> Shows</a>
                    </DatagridColumn>
                    <DatagridColumn Title="Details" TRowData="User">
                        <a href="@($"/users/{@context?.UserId}")" class="btn btn-primary"><i class="bi bi-people-fill"
                                aria-hidden="true"></i> Details</a>
                    </DatagridColumn>
                </Datagrid>
            }
        </ChildContent>
    </Tab>
</Tabs>

@code {
    private ICollection<User>? AppUsers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        using var context = DbFactory.CreateDbContext();

        AppUsers = await context.Users!.ToListAsync();

    }
}
