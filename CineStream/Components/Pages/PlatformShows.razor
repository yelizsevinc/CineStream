@page "/platforms/{PlatformId}/shows"
@using Microsoft.EntityFrameworkCore
@using CineStream.Data

@inject IDbContextFactory<CineStreamContext> DbFactory

<PageTitle>Shows</PageTitle>

@if ((appPlatform != null) && (appPlatform.Name != null))
{
    <h1><i class="bi bi-camera-reels-fill" aria-hidden="true"></i> Shows of @appPlatform.Name</h1>
}

@if (appShows != null)
{
    <Datagrid Items="appShows">
    <DatagridColumn Title="ShowId" TRowData="AppShow" Field="c => c.ShowId.ToString()" CanSort="true" CanFilter="true"
        FilterImmediately="true" />
    <DatagridColumn Title="Title" TRowData="AppShow" Field="c => c.Title" CanSort="true" CanFilter="true"
        FilterImmediately="true" />
    <DatagridColumn Title="CreatedAt" TRowData="AppShow" Field="c => c.CreatedAt.ToString()" CanSort="true"
        CanFilter="true" FilterImmediately="true" />
    <DatagridColumn Title="AddedToPlatformDate" TRowData="AppShow" Field="c => c.AddedToPlatformDate.ToString()"
        CanSort="true" CanFilter="true" FilterImmediately="true" />
</Datagrid>
}

@code
{
    [Parameter]
    public string? PlatformId { get; set; }
    private Platform? appPlatform { get; set; }
    private ICollection<PlatformShow>? appPlatformShows { get; set; }
    private ICollection<AppShow>? appShows { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        using var context = DbFactory.CreateDbContext();

        appShows = new List<AppShow>();
        appPlatform = await context.Platforms!.FirstOrDefaultAsync(c => c.PlatformId.ToString() == PlatformId);

        var allPlatformShows = await context.PlatformShows!.ToListAsync();
        var platformShows = allPlatformShows.Where(c => c.PlatformId.ToString() == PlatformId).ToList();
        var allShows = await context.Shows!.ToListAsync();
        appPlatformShows = allPlatformShows.Where(c => c.PlatformId.ToString() == PlatformId).ToList();


        foreach (var platformShow in appPlatformShows)
        {
            var Show = await context.Shows!.FirstOrDefaultAsync(u => u.ShowId == platformShow.ShowId);
            if (Show != null)
            {
                var appShow = new AppShow
                    {
                        ShowId = Show.ShowId,
                        Title = Show.Title,
                        CreatedAt = Show.CreatedAt,
                        AddedToPlatformDate = platformShow.AddedToPlatformDate
                    };
                appShows.Add(appShow);
            }
        }

    }
}
