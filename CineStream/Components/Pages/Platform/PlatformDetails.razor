@page "/platforms/{PlatformId}"
@using Microsoft.EntityFrameworkCore
@using CineStream.Data

@inject IDbContextFactory<CineStreamContext> DbFactory

<PageTitle>Platform</PageTitle>

@if ((appPlatform != null) && (appPlatform.Name != null) && (appPlatform.Details != null))
{
    <h1><i class="bi bi-tv-fill" aria-hidden="true"></i> @appPlatform.Name</h1>

    <div class="clr-row">
    <div class="clr-col-12">
        <Card>
            <CardHeader>
                <i class="bi bi-info-circle-fill" aria-hidden="true"></i> Details
            </CardHeader>
            <CardBody>
                <CardBlock>
                    <CardText>
                        @appPlatform.Details
                    </CardText>
                </CardBlock>
            </CardBody>
        </Card>
    </div>
    <div class="clr-col-lg-6 clr-col-12">
        <Card>
            <CardHeader>
                <NavLink href=@($"platforms/{PlatformId}/shows")><i class="bi bi-camera-reels-fill"
                        aria-hidden="true"></i>
                    Shows</NavLink>
            </CardHeader>
            <CardBody>
                <CardBlock>
                    <CardText>
                        <ul>
                            <li>List the shows in the DB</li>
                            <li>Delete a show from the DB</li>
                        </ul>
                    </CardText>
                </CardBlock>
            </CardBody>
        </Card>
    </div>
    <div class="clr-col-lg-6 clr-col-12">
        <Card>
            <CardHeader>
                <NavLink href=@($"platforms/{PlatformId}/users")><i class="bi bi-people-fill" aria-hidden="true"></i>
                    Users
                </NavLink>
            </CardHeader>
            <CardBody>
                <CardBlock>
                    <CardText>
                        <ul>
                            <li>List the users in the DB</li>
                            <li>Delete a user from the DB</li>
                            <li>List the shows of a user in DB</li>
                        </ul>
                    </CardText>
                </CardBlock>
            </CardBody>
        </Card>
    </div>
</div>
}

@code
{
    [Parameter]
    public string? PlatformId { get; set; }
    private Platform? appPlatform { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        using var context = DbFactory.CreateDbContext();

        appPlatform = await context.Platforms!.FirstOrDefaultAsync(c => c.PlatformId.ToString() == PlatformId);

    }

}
